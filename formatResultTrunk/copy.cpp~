//This program transform the individual trunk cylinder file into a single file with the following formate:
//1cylinder index(bottom up fashion) 2cylinderParameter1 3cylinderParameter2 4cylinderParameter3 5cylinderParameter4 6cylinderParameter5 7cylinderParameter6 8cylinderParameter7
//input arrgument formate:
//n(number of files) file1 file2 file3 ... filen


#include <iostream>
#include <fstream>
#include <string>
#include <sstream>
#include <stdlib.h>

int
main (int argc, char *argv[])
{

  int num;
  num = atoi(argv[1]);




  std::string line;
  std::string x;
  std::string y;
  std::string z;

  std::string z_offset;
  //  std::string line_x;
  //  std::string line_z;
  //  std::string word;
  //  std::stringstream ss;
  //ss << argv[1];
  //  std::ifstream infile(argv[1]);
  std::ofstream outfile;
  std::ifstream profile("rawprofile.txt");
  if (profile.is_open()){
    getline(profile, z_offset);}
  



  outfile.open("Tree_2_Cylinder_T.dat");
  //float a; 
  //float b;
  //float c;
  //int count = 0;
  
  //if (infile.is_open()){
  for (int i = 0; i < num; ++i){
    std::ifstream infile(argv[i+2]);
    if (infile.is_open()){
      outfile << i << " ";
      getline(infile, x);
      //outfile << line << " ";
      getline(infile, y);
      //outfile << line << " ";
      getline(infile, z);
      outfile << atof(z.c_str())*100-atof(z_offset.c_str()) << " "; //x
      outfile << atof(y.c_str())*100 << " "; //y
      outfile << atof(x.c_str())*100 << " "; //z
      getline(infile, line);
      outfile << line << " "; //a
      getline(infile, line);
      outfile << line << " "; //b
      getline(infile, line);
      outfile << line << " "; //c
      getline(infile, line);
      outfile << atof(line.c_str())*100 << " "; //radius
      getline(infile, line);
      outfile << atof(line.c_str())*100 << "\n";}  //length
    infile.close();}
  outfile.close();
}





/*

    //get rid of ply formate header
    //myfile >> a >> b >> c;
    //myfile >> a >> b >> c;
    //myfile >> a >> b >> c;
    //myfile >> a >> b >> c;
    getline(infile, line_x);
    getline(infile, line);
    getline(infile, line_z);
    outfile << atof(line_z.c_str())*100-105.448 << "\n";
    outfile << atof(line.c_str())*100 << "\n";
    outfile << atof(line_x.c_str())*100 << "\n";
    getline(infile, line_x);
    getline(infile, line);
    getline(infile, line_z);
    outfile << line_z << "\n";
    outfile << line << "\n";
    outfile << line_x << "\n";
    getline(infile, line);
    outfile << atof(line.c_str())*100 << "\n";
    getline(infile, line);
    outfile << atof(line.c_str())*100 << "\n";
  }
  infile.close();
  outfile.close();
}
*/
